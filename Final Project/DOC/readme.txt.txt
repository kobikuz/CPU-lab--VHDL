TOP - הרכיב העליון שמכיל בתוכו את כל המודולים תחתיואחראי על העברת המידע בין המיפס לפריפריות והמוצאים\כניסות החומרתיות.

adress_bus -   זה הוא באס הכתובות הראשי הממומש ע"י תצורת טרי-סייט על בסיס הבידר-פין הנתון				

data_bus -    על בסיס הבידר-פין הנתון זה הוא באס הדאטה הראשי הממומש ע"י תצורת טרי-סייט על בסיס 				

MIPS- הרכיב העליון שכולל בתוכו את רכיבי המיפס
FETCH,DECODE,EXECUTE,CONTROL, DMEMORY 
אחראי על העברת המידע ביניהם והוצאתו לבאסים הראשיים 

control - זה רכיב הקונטרול של המיפס
		תפקידו הוא לקבל אופקודים\פנקשין קוד ולשלוח ביטי בקרה ליחידות של 		
		המיפס שתלויות בפקודות שעליו לבצע

Dmemory- רכיב המיפס שבו הוא קורא מהזכרון דאטה

Execute - רכיב המיפס האחראי על ביצוע שלב האקסקיוט בפועל,
		הוא מקבל ביטי בקרה מהקונטרול והמכיל בתוכו את היחידה הלוגיצת והאריתמטית אשר מבצעות את הפעולה על המידע
(שהוא בורר מאיפה הוא מגיע- ע"י המוקסים שאפשר לראות בשרטוט הרכיב) ומוציא את התוצאה שהתקבלה.

DECODE- רכיב המיפס האחראי על פענוח קוד הפקודה וחלוקתו לרכיבים של כתובות רגיסטרים ומספר(אימידייט).
את החלוקה הוא מבצע ומעביר לרכיבי המיפס של הקונטרול והאקסקיוט  דרך מודול המיפס העליון.

IFETCH -  רכיב האחראי על גישה לזכרון הפקודות ושליפתן ממנו. 

GPIO- רכיב האחראי על הגישה לכל הכניסות ויציאות החומרתית. 
	הוא מכיל את היציאות ללדים ולתצוגות המספריות ואת הסוויצ'ים ככניסה.
	יש בו צ'יפס סלקט האחרי על בחירת המוצא\כניסה הנכונים, מכיל בתוכו את הבאסים של המידע והכתובת המתחברים למיפס
ומכיל בתוכו גם יחידה לעיבוד סיגנלים לתצוגה מספרים על גבי הצג.

GPIO_DATA_BUS - באס הדאטה המשני שנמצא בתוך המודול של ה GPIO

data_bus_int -   זה הוא באס הדאטה המשני הממומש ע"י תצורת טרי-סייט על בסיס
 				הבידרפין הנתון . 
		באס זה מתחבר מהבאס דאטה הראשי למודול שמטפל בפסיקות ודואג שגם שם יהיה לנו קריאה של כולם במקביל אבל רק כתיבה של פסיקה יחידה .
	
peripheries- קובץ עליון המכיל בתוכו את הפריפריות:
השעון,בקר הפסיקות והמחלק
בתוכו יש את באסי הדאטה והכתובת המשניים :
add_bus_int data_bus_int
הוא מקבל מידע וכתובת מהבאסים הראשיים ומעביר אותם אל ומהפריפריות			

Divider - הרכיב המחלק , המבצע חילוק ארוך בינארי. ממומש לפי מכונת מצבים
			כאשר לרב הוא במצב שינה, ואז כשנטען המחלק הוא נדלק ומצבע את הפעולה, ובסופה עובר ל מצב סיום- בו הוא מוציא פסיקה וחוזר למצב ההתחלתי.

INT_REQ_TOP- קובץ עליון האחראי על בקר הפסיקות, הוא מכיל בתוכו  שבעה מודולים יחידים של פסיקה. אליהן הוא מעביר בקשות לפסיקה.
הוא מוציא בקשת פסיקה בצורת IFG לפי סדר החשיבות
ובנוסף לכל פסיקה שיוצאת הוא מוציא טייפ- כתובת השגרה לטיפול בפסיקה.

SINGLE_INT - רכיב פסיקה רגיל אשר מקבל בקשה לפסיקה ומוציא IFG

TIMER_2 -  רכיב השעון של הפריפריה.
מקבל מספרים אשר משפיעים על מצב הספירה שלו וביטי בקרה 
הוא מוציא אות ריבועי ופסיקת שעון.


counter - רכיב סופר בסיסי שהשתמשנו במעבדה 4
			פה הוא יהיה חלק ממודול השעון כאשר נוסיף לו סינגל
			init_btcnt שיהיה אחראי על אתמחול המספר ממנו אנחנו מתחילים לספור

CounterEnvelope- מעטפת ה PLL ממעבדה 4

PLL- אותו הכנסנו כדי לחלק את תדר השעון שיכנס לכל הרכיבים חוץ מהשעון והמחלק
תדר שעון המערכת היה מהיר מדי וכך לא יכלנו לראות דברים שקוראים על החומרה.
בעוד השעון הרגיל נכנס למחלק וכך הוא באמת עובד כרכיב מאיץ חומרה.

PLL_COUNTER- רכיב הסופר עבוד הPLL.





